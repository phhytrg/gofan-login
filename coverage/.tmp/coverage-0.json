{"D:/Projects/Gofan/gofan-login/src/features/auth/components/login-form.tsx":{"path":"D:/Projects/Gofan/gofan-login/src/features/auth/components/login-form.tsx","statementMap":{"0":{"start":{"line":10,"column":33},"end":{"line":39,"column":1}},"1":{"start":{"line":11,"column":4},"end":{"line":38,"column":7}},"2":{"start":{"line":12,"column":8},"end":{"line":35,"column":9}},"3":{"start":{"line":13,"column":27},"end":{"line":15,"column":14}},"4":{"start":{"line":16,"column":12},"end":{"line":19,"column":14}},"5":{"start":{"line":22,"column":12},"end":{"line":34,"column":14}},"6":{"start":{"line":26,"column":20},"end":{"line":32,"column":22}},"7":{"start":{"line":40,"column":25},"end":{"line":43,"column":2}},"8":{"start":{"line":44,"column":18},"end":{"line":235,"column":1}},"9":{"start":{"line":45,"column":50},"end":{"line":47,"column":6}},"10":{"start":{"line":48,"column":21},"end":{"line":51,"column":5}},"11":{"start":{"line":49,"column":8},"end":{"line":49,"column":26}},"12":{"start":{"line":50,"column":8},"end":{"line":50,"column":31}},"13":{"start":{"line":52,"column":4},"end":{"line":234,"column":13}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":33},"end":{"line":10,"column":34}},"loc":{"start":{"line":10,"column":53},"end":{"line":39,"column":1}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":23},"end":{"line":11,"column":24}},"loc":{"start":{"line":11,"column":37},"end":{"line":36,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":44},"end":{"line":25,"column":45}},"loc":{"start":{"line":25,"column":71},"end":{"line":33,"column":17}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":18},"end":{"line":44,"column":19}},"loc":{"start":{"line":44,"column":22},"end":{"line":235,"column":1}},"line":44},"4":{"name":"(anonymous_4)","decl":{"start":{"line":48,"column":21},"end":{"line":48,"column":22}},"loc":{"start":{"line":48,"column":29},"end":{"line":51,"column":5}},"line":48}},"branchMap":{"0":{"loc":{"start":{"line":29,"column":34},"end":{"line":29,"column":67}},"type":"binary-expr","locations":[{"start":{"line":29,"column":34},"end":{"line":29,"column":51}},{"start":{"line":29,"column":55},"end":{"line":29,"column":67}}],"line":29},"1":{"loc":{"start":{"line":115,"column":51},"end":{"line":115,"column":93}},"type":"binary-expr","locations":[{"start":{"line":115,"column":51},"end":{"line":115,"column":76}},{"start":{"line":115,"column":80},"end":{"line":115,"column":93}}],"line":115}},"s":{"0":1,"1":3,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":3,"10":3,"11":0,"12":0,"13":3},"f":{"0":3,"1":0,"2":0,"3":3,"4":0},"b":{"0":[0,0],"1":[3,0]},"inputSourceMap":{"version":3,"sources":["D:/Projects/Gofan/gofan-login/src/features/auth/components/login-form.tsx"],"sourcesContent":["import { Button, Column, Grid, PasswordInput, TextInput } from '@carbon/react';\r\nimport { SubmitHandler, useForm } from 'react-hook-form';\r\nimport * as yup from 'yup';\r\nimport './login-form.scss';\r\nimport playOnLogo from '../assets/there-for-every-moment-light.png';\r\nimport graduation from '../assets/graduation.png';\r\nimport companyLogos from '../assets/company-logos.png';\r\nimport { useCallback } from 'react';\r\n\r\ninterface LoginFormInput {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst useYupValidationResolver = (\r\n  validationSchema: yup.ObjectSchema<LoginFormInput>,\r\n) => {\r\n  return useCallback(\r\n    async (data: LoginFormInput) => {\r\n      try {\r\n        const values = await validationSchema.validate(data, {\r\n          abortEarly: false,\r\n        });\r\n        return {\r\n          values,\r\n          errors: {},\r\n        };\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n      } catch (errors: any) {\r\n        return {\r\n          values: {},\r\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n          errors: errors.inner.reduce((allErrors: any, currentError: any) => {\r\n            return {\r\n              ...allErrors,\r\n              [currentError.path]: {\r\n                type: currentError.type ?? 'validation',\r\n                message: currentError.message,\r\n              },\r\n            };\r\n          }, {}),\r\n        };\r\n      }\r\n    },\r\n    [validationSchema],\r\n  );\r\n};\r\n\r\nconst validationSchema = yup.object().shape({\r\n  email: yup.string().email().required(\"Email can't be empty\"),\r\n  password: yup\r\n    .string()\r\n    .min(8, 'Password must be at least 8 characters')\r\n    .matches(/(?=.*[0-9])/, 'Password must contain at least one number')\r\n    .matches(\r\n      /(?=.*[A-Z])/,\r\n      'Password must contain at least one uppercase letter',\r\n    )\r\n    .matches(\r\n      /(?=.*[a-z])/,\r\n      'Password must contain at least one lowercase letter',\r\n    )\r\n    .matches(\r\n      /(?=.*[!@#$%^&*])/,\r\n      'Password must contain at least one special character',\r\n    )\r\n    .required(\"Password can't be empty\"),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const { register, formState, handleSubmit } = useForm<LoginFormInput>({\r\n    resolver: useYupValidationResolver(validationSchema),\r\n  });\r\n  const onSubmit: SubmitHandler<LoginFormInput> = (data) => {\r\n    console.log(data);\r\n    console.log(formState);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-mask\">\r\n      <img src={playOnLogo} />\r\n      <div className=\"container\">\r\n        <Grid condensed>\r\n          <Column sm={'100%'} lg={8}>\r\n            <form\r\n              className=\"form\"\r\n              onSubmit={handleSubmit(onSubmit)}\r\n              aria-label=\"form\"\r\n            >\r\n              <h2>Log In</h2>\r\n              <p>\r\n                Need a GoFan account?&nbsp;\r\n                <a href=\"#\">Create an account</a>\r\n              </p>\r\n              <TextInput\r\n                {...register('email')}\r\n                id={'email'}\r\n                labelText={'Email'}\r\n                invalid={!!formState.errors.email}\r\n                invalidText={formState.errors.email?.message}\r\n              />\r\n              <PasswordInput\r\n                {...register('password')}\r\n                data-testid={'password-input'}\r\n                id={'password'}\r\n                labelText={'Password'}\r\n                className={formState.errors.password && 'error-input'}\r\n                invalid={!!formState.errors.password}\r\n                invalidText={formState.errors.password?.message}\r\n              />\r\n              <Button className=\"login-btn\" type=\"submit\">\r\n                Log In\r\n              </Button>\r\n              <a className=\"forgot-password-link\" href=\"#\">Forgot password</a>\r\n              <p id=\"center\" className=\"view-mobile\">\r\n                On a mobile device? <a>View mobile HQ</a>\r\n              </p>\r\n              <img\r\n                src={companyLogos}\r\n                style={{\r\n                  objectFit: 'contain',\r\n                  maxHeight: '100%',\r\n                  maxWidth: '100%',\r\n                }}\r\n              />\r\n              <p className=\"footer\">\r\n                2015-2025 Huddle Tickets LLC, All Rights Reserved <br />\r\n                v2024.06.17\r\n              </p>\r\n            </form>\r\n          </Column>\r\n          <Column sm={0} lg={8}>\r\n            <img\r\n              src={graduation}\r\n              style={{\r\n                objectFit: 'fill',\r\n                maxWidth: '100%',\r\n                maxHeight: '100%',\r\n              }}\r\n            />\r\n          </Column>\r\n        </Grid>\r\n      </div>\r\n      {/* <div className=\"login-form\">\r\n        <div>\r\n\r\n        </div>\r\n        <div>\r\n          \r\n        </div>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"names":["Button","Column","Grid","PasswordInput","TextInput","useForm","yup","playOnLogo","graduation","companyLogos","useCallback","useYupValidationResolver","validationSchema","data","values","validate","abortEarly","errors","inner","reduce","allErrors","currentError","path","type","message","object","shape","email","string","required","password","min","matches","LoginForm","register","formState","handleSubmit","resolver","onSubmit","console","log","div","className","img","src","condensed","sm","lg","form","aria-label","h2","p","a","href","id","labelText","invalid","invalidText","data-testid","style","objectFit","maxHeight","maxWidth","br"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"19419ae8e1f70ef6e62c3f95e5936528acad4b48"}}